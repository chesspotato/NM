
import React, { useState } from "react";
import { motion } from "framer-motion";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input"; // Corrected import path
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Target, Clock } from "lucide-react";
import { Calculation } from "@/entities/Calculation";

export default function TargetCalculator() {
  const [goalName, setGoalName] = useState("");
  const [goalDate, setGoalDate] = useState("");
  const [showExtra, setShowExtra] = useState("");
  const [result, setResult] = useState(null);
  const [isCalculating, setIsCalculating] = useState(false);

  const calculateCountdown = async () => {
    setIsCalculating(true);
    
    try {
      if (!goalName || !goalDate) {
        alert("Please enter both goal name and date");
        setIsCalculating(false);
        return;
      }

      const target = new Date(goalDate);
      const today = new Date();
      
      if (target < today) {
        alert(`${goalName} already passed on ${target.toLocaleDateString()}`);
        setIsCalculating(false);
        return;
      }

      const timeDiff = target - today;
      const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));
      const weeks = Math.floor(days / 7);
      const months = Math.round(days / 30.44);
      
      let extraData = {};
      if (showExtra === "yes") {
        extraData.minutes = Math.floor(timeDiff / (1000 * 60));
        extraData.seconds = Math.floor(timeDiff / 1000);
      }

      const resultData = {
        goalName,
        days,
        weeks,
        months,
        ...extraData
      };

      setResult(resultData);

      // Save to history
      await Calculation.create({
        calculator_type: "target",
        input_data: { goalName, goalDate, showExtra },
        result: `${days} days until ${goalName}`,
        calculation_date: new Date().toISOString()
      });

    } catch (error) {
      console.error("Calculation error:", error);
      alert("Invalid date entered");
    }
    
    setIsCalculating(false);
  };

  const reset = () => {
    setGoalName("");
    setGoalDate("");
    setShowExtra("");
    setResult(null);
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className="space-y-6"
    >
      <Card className="border-0 bg-white/80 backdrop-blur-sm shadow-2xl">
        <CardHeader className="text-center pb-6">
          <div className="w-16 h-16 bg-gradient-to-r from-red-500 to-rose-500 rounded-2xl flex items-center justify-center mx-auto mb-4">
            <Target className="w-8 h-8 text-white" />
          </div>
          <CardTitle className="text-2xl font-bold text-slate-900">
            Countdown Calculator
          </CardTitle>
          <p className="text-slate-600">Count down to your important dates ðŸŽ¯</p>
        </CardHeader>
        
        <CardContent className="space-y-6">
          <div className="space-y-2">
            <Label htmlFor="goalName">What are you counting down to?</Label>
            <Input
              id="goalName"
              type="text"
              placeholder="e.g., graduation, birthday, vacation"
              value={goalName}
              onChange={(e) => setGoalName(e.target.value)}
              className="text-lg"
            />
          </div>

          <div className="space-y-2">
            <Label htmlFor="goalDate">Target date</Label>
            <Input
              id="goalDate"
              type="date"
              value={goalDate}
              onChange={(e) => setGoalDate(e.target.value)}
              className="text-lg"
            />
          </div>

 